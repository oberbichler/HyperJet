name: Upload Python Package

on: [push]

jobs:
  deploy_win_mac:
    name: Build package on python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py bdist_wheel
        # twine upload dist/*.whl

  deploy_linux:
    name: Build package on python ${{ matrix.python-version }} and ${{ matrix.os }}

    runs-on: ubuntu-latest

    container:
      image: oberbichler/manylinux2010_x86_64
      env:
        PLAT: manylinux2010_x86_64

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        if [ "${PYTHON_VERSION}" == "3.5" ]; then set PYBIN=/opt/python/cp35m/bin fi
        if [ "${PYTHON_VERSION}" == "3.6" ]; then set PYBIN=/opt/python/cp36m/bin fi
        if [ "${PYTHON_VERSION}" == "3.7" ]; then set PYBIN=/opt/python/cp37m/bin fi
        if [ "${PYTHON_VERSION}" == "3.8" ]; then set PYBIN=/opt/python/cp38/bin fi

        "${PYBIN}/pip" install setuptools cmake wheel twine
        "${PYBIN}/pip" install -r requirements.txt
        "${PYBIN}/pip" wheel . -w wheelhouse/

        auditwheel repair "$whl" --plat $PLAT -w wheelhouse/

        # twine upload wheelhouse/*.whl

  deploy_source:
    name: Build source package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        # twine upload dist/*
